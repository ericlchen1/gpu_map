package com.gpu_map.gpu;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private GpuRepository gpuRepository;

  // @PostMapping(path="/add") // Map ONLY POST Requests
  // public @ResponseBody String addNewUser (@RequestParam String name
  //     , @RequestParam Double latitude, @RequestParam Double longitude
  //     , @RequestParam Integer likes, @RequestParam Integer dislikes) {
  //   // @ResponseBody means the returned String is the response, not a view name
  //   // @RequestParam means it is a parameter from the GET or POST request

  //   Gpu n = new Gpu();
  //   n.setName(name);
  //   n.setLatitude(latitude);
  //   n.setLongitude(longitude);
  //   n.setLikes(likes);
  //   n.setDislikes(dislikes);

  //   gpuRepository.save(n);
  //   return "Saved";
  // }

  @PostMapping(path="/add/json") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestBody Gpu gpu) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Gpu n = gpu;

    gpuRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Gpu> getAllUsers() {
    // This returns a JSON or XML with the users
    return gpuRepository.findAll();
  }
}