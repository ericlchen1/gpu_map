package com.gpu_map.accessingdatamysql;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/gpu_map") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private GpuRepository gpuRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewGpu (@RequestParam String name, 
        @RequestParam Double latitude, @RequestParam Double longitude,
        @RequestParam Integer likes, @RequestParam Integer dislikes, 
        @RequestParam Map<String, Integer> available) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    System.out.println("Received post");
    Gpu g = new Gpu();
    
    g.setName(name);
    g.setLatitude(latitude);
    g.setLongitude(longitude);
    g.setLikes(likes);
    g.setDislikes(dislikes);
    System.out.println("At available");
    g.setAvailable(available);
    System.out.println("Finished available");
    gpuRepository.save(g);
    return "Saved";
  }
//  @PostMapping(path="/update")
//  public @ResponseBody String updateGpulocation(@RequestParam Integer id, @RequestParam Integer likes, @RequestParam Integer dislikes, @RequestParam Map<String,Integer> available)
//  {
//
//  }
//  @PostMapping(path='/delete')
//  public @ResponseBody String removeGpuLocation(@RequestParam Integer id){
//
//  }
//
//  @GetMapping(path="/find")
//  public @ResponseBody String findGpuLocation(@RequestParam Integer id)
//  {
//
//  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Gpu> getAllLocations() {
    // This returns a JSON or XML with the users
    System.out.println("This worked");
    return gpuRepository.findAll();
  }
}